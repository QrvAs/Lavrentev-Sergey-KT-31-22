// <auto-generated />
using System;
using LavrentevKT3122lb1.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LavrentevKT3122lb1.Migrations
{
    [DbContext(typeof(TeacherDbContext))]
    [Migration("20250501190411_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LavrentevKT3122lb1.Models.AcademicDegree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Дата создания");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("f_deleted")
                        .HasComment("Флаг удаления");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("c_name")
                        .HasComment("Название ученой степени");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("d_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Дата обновления");

                    b.HasKey("Id")
                        .HasName("pk_cd_academic_degree_id");

                    b.ToTable("cd_academic_degree", (string)null);
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FoundationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_foundation")
                        .HasComment("Дата основания кафедры");

                    b.Property<long?>("HeadId")
                        .HasColumnType("bigint")
                        .HasColumnName("f_head_id")
                        .HasComment("Идентификатор заведующего кафедрой");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("c_name")
                        .HasComment("Название кафедры");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("pk_cd_department_id");

                    b.HasIndex("HeadId")
                        .IsUnique()
                        .HasDatabaseName("idx_cd_department_f_head_id")
                        .HasFilter("[f_head_id] IS NOT NULL");

                    b.ToTable("cd_department", (string)null);
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Discipline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("c_code")
                        .HasComment("Код дисциплины");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("c_name")
                        .HasComment("Название дисциплины");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("pk_cd_discipline_id");

                    b.ToTable("cd_discipline", (string)null);
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("d_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Дата создания записи");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("f_deleted")
                        .HasComment("Флаг удаления записи");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("c_name")
                        .HasComment("Название должности");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("d_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP")
                        .HasComment("Дата обновления записи");

                    b.HasKey("Id")
                        .HasName("pk_cd_position_id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("idx_cd_position_name");

                    b.ToTable("cd_position", (string)null);
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AcademicDegreeId")
                        .HasColumnType("bigint")
                        .HasColumnName("f_degree_id")
                        .HasComment("Ссылка на ученую степень");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_birthdate")
                        .HasComment("Дата рождения");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("f_department_id")
                        .HasComment("Ссылка на кафедру");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("c_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("d_hiredate")
                        .HasComment("Дата приема на работу");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("c_lastname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("c_middlename")
                        .HasComment("Отчество преподавателя");

                    b.Property<long>("PositionId")
                        .HasColumnType("bigint")
                        .HasColumnName("f_position_id")
                        .HasComment("Ссылка на должность");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("pk_cd_teacher_id");

                    b.HasIndex("AcademicDegreeId")
                        .HasDatabaseName("idx_cd_teacher_f_degree_id");

                    b.HasIndex("DepartmentId")
                        .HasDatabaseName("idx_cd_teacher_f_department_id");

                    b.HasIndex("PositionId")
                        .HasDatabaseName("idx_cd_teacher_f_position_id");

                    b.ToTable("cd_teacher", (string)null);
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.TeacherWorkload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор нагрузки");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DisciplineId")
                        .HasColumnType("bigint")
                        .HasColumnName("f_discipline_id")
                        .HasComment("Ссылка на дисциплину");

                    b.Property<int>("Hours")
                        .HasColumnType("integer")
                        .HasColumnName("n_hours")
                        .HasComment("Количество часов");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Semester")
                        .HasColumnType("integer")
                        .HasColumnName("n_semester")
                        .HasComment("Семестр (1 или 2)");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint")
                        .HasColumnName("f_teacher_id")
                        .HasComment("Ссылка на преподавателя");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("n_year")
                        .HasComment("Год");

                    b.HasKey("Id")
                        .HasName("pk_cd_teacher_workload_id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId", "DisciplineId", "Semester", "Year")
                        .IsUnique()
                        .HasDatabaseName("idx_cd_teacher_workload_teacher_discipline_unique");

                    b.ToTable("cd_teacher_workload", (string)null);
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Department", b =>
                {
                    b.HasOne("LavrentevKT3122lb1.Models.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("LavrentevKT3122lb1.Models.Department", "HeadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cd_department_f_head_id");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Teacher", b =>
                {
                    b.HasOne("LavrentevKT3122lb1.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Teachers")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_cd_teacher_f_degree_id");

                    b.HasOne("LavrentevKT3122lb1.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cd_teacher_f_department_id");

                    b.HasOne("LavrentevKT3122lb1.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cd_teacher_f_position_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.TeacherWorkload", b =>
                {
                    b.HasOne("LavrentevKT3122lb1.Models.Discipline", "Discipline")
                        .WithMany("Workloads")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_teacher_workload_f_discipline_id");

                    b.HasOne("LavrentevKT3122lb1.Models.Teacher", "Teacher")
                        .WithMany("Workloads")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cd_teacher_workload_f_teacher_id");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Discipline", b =>
                {
                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("LavrentevKT3122lb1.Models.Teacher", b =>
                {
                    b.Navigation("Workloads");
                });
#pragma warning restore 612, 618
        }
    }
}
